basePath: /
definitions:
  domain.Book:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for Byfood Service.
  title: byfood_service API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: Create a book with the input payload
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create book
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /book/{id}:
    delete:
      description: Delete a book by UUID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid book ID or delete failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book by ID
      tags:
      - books
    get:
      description: Get a single book by its UUID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Invalid book ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update book identified by UUID with new data
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Invalid input or ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found or update failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book by ID
      tags:
      - books
  /books:
    get:
      description: Get all books from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all books
      tags:
      - books
swagger: "2.0"
